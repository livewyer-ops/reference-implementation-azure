apiVersion: v1
kind: Namespace
metadata:
  name: crossplane-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: seed-system
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-azure
spec:
  package: xpkg.upbound.io/upbound/provider-azure:v0.30.0
  packagePullPolicy: IfNotPresent
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-helm
spec:
  package: xpkg.upbound.io/crossplane-contrib/provider-helm:v1.0.2
  packagePullPolicy: IfNotPresent
---
apiVersion: pkg.crossplane.io/v1beta1
kind: Function
metadata:
  name: function-patch-and-transform
spec:
  package: xpkg.upbound.io/crossplane-contrib/function-patch-and-transform:v0.5.0
  packagePullPolicy: IfNotPresent
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: seedinfrastructures.platform.livewyer.io
spec:
  group: platform.livewyer.io
  names:
    kind: SeedInfrastructure
    plural: seedinfrastructures
  claimNames:
    kind: SeedInfrastructureClaim
    plural: seedinfrastructureclaims
  defaultCompositionRef:
    name: seed-infrastructure
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                parameters:
                  type: object
                  properties:
                    domain:
                      type: string
                    resourceGroup:
                      type: string
                    keyVaultName:
                      type: string
                    location:
                      type: string
                    tenantId:
                      type: string
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                    subscriptionId:
                      type: string
                    clusterName:
                      type: string
                    wildcardAddress:
                      type: string
                      default: 127.0.0.1
                    configSecretName:
                      type: string
                      default: cnoe-config
                    clusterConnectionSecretName:
                      type: string
                      default: cnoe-kubeconfig
                  required:
                    - domain
                    - resourceGroup
                    - keyVaultName
                    - location
                    - tenantId
                    - clientId
                    - clientSecret
                    - subscriptionId
                    - clusterName
              required:
                - parameters
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: seed-infrastructure
spec:
  compositeTypeRef:
    apiVersion: platform.livewyer.io/v1alpha1
    kind: SeedInfrastructure
  mode: Pipeline
  pipeline:
    - step: render
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: ResourcesConfiguration
        resources:
          - name: dnsWildcard
            base:
              apiVersion: network.azure.upbound.io/v1beta1
              kind: DNSARecord
              metadata:
                annotations:
                  crossplane.io/external-name: "*"
              spec:
                providerConfigRef:
                  name: azure-default
                forProvider:
                  ttl: 3600
                  records:
                    - 127.0.0.1
                  resourceGroupName: ""
                  zoneName: ""
            patches:
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: spec.parameters.clusterName
                  strategy: string
                  string:
                    fmt: "%s-wildcard"
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.domain
                toFieldPath: metadata.annotations[cnoe.io/domain]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.resourceGroup
                toFieldPath: spec.forProvider.resourceGroupName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.domain
                toFieldPath: spec.forProvider.zoneName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.wildcardAddress
                toFieldPath: spec.forProvider.records[0]
          - name: keyVault
            base:
              apiVersion: keyvault.azure.upbound.io/v1beta1
              kind: Vault
              metadata:
                annotations:
                  crossplane.io/external-name: ""
              spec:
                providerConfigRef:
                  name: azure-default
                forProvider:
                  enableRbacAuthorization: true
                  skuName: standard
                  softDeleteRetentionDays: 7
                  resourceGroupName: ""
                  location: ""
                  tenantId: ""
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.keyVaultName
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.keyVaultName
                toFieldPath: metadata.annotations[cnoe.io/keyvault]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.keyVaultName
                toFieldPath: metadata.annotations[crossplane.io/external-name]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.resourceGroup
                toFieldPath: spec.forProvider.resourceGroupName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.location
                toFieldPath: spec.forProvider.location
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tenantId
                toFieldPath: spec.forProvider.tenantId
          - name: azureServicePrincipalSecret
            base:
              apiVersion: v1
              kind: Secret
              metadata:
                name: azure-service-principal
                namespace: crossplane-system
              type: Opaque
              stringData:
                credentials: ""
            readinessChecks:
              - type: NonEmpty
                fieldPath: metadata.uid
            patches:
              - type: CombineFromComposite
                combine:
                  variables:
                    - fromFieldPath: spec.parameters.clientId
                    - fromFieldPath: spec.parameters.clientSecret
                    - fromFieldPath: spec.parameters.tenantId
                    - fromFieldPath: spec.parameters.subscriptionId
                  strategy: string
                  string:
                    fmt: '{"clientId":"%s","clientSecret":"%s","tenantId":"%s","subscriptionId":"%s"}'
                toFieldPath: stringData.credentials
          - name: providerConfigAzure
            base:
              apiVersion: azure.upbound.io/v1beta1
              kind: ProviderConfig
              metadata:
                name: azure-default
              spec:
                subscriptionID: ""
                tenantID: ""
                clientID: ""
                credentials:
                  source: Secret
                  secretRef:
                    namespace: crossplane-system
                    name: azure-service-principal
                    key: credentials
            readinessChecks:
              - type: NonEmpty
                fieldPath: metadata.uid
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.subscriptionId
                toFieldPath: spec.subscriptionID
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tenantId
                toFieldPath: spec.tenantID
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.clientId
                toFieldPath: spec.clientID
          - name: providerConfigHelm
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: ProviderConfig
              metadata:
                name: remote-aks
              spec:
                credentials:
                  source: Secret
                  secretRef:
                    namespace: crossplane-system
                    name: ""
                    key: kubeconfig
            readinessChecks:
              - type: NonEmpty
                fieldPath: metadata.uid
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.clusterConnectionSecretName
                toFieldPath: spec.credentials.secretRef.name
